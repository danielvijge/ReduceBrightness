################################################################################
# Squeezeplay makefile for Linux raspberry pi
# Copyright 2007 Logitech
################################################################################

ARCH ?= $(shell arch)
ABI ?= $(shell gcc --print-multiarc)

#
# Absolute path to top of SQUEEZEPLAY directories
#
SRC_DIR = $(realpath ${PWD})
BASE_DIR = $(dir ${SRC_DIR})

export BUILD_TOP=$(BASE_DIR)/build/linux
DESTDIR=${BUILD_TOP}
export PREFIX=${DESTDIR}

export CFLAGS=-I${PREFIX}/include -I${PREFIX}/include/SDL -fPIC -g -O3 -mfpu=vfp -mfloat-abi=hard -march=armv6j
export LDFLAGS=-L${PREFIX}/usr/lib

export TOOLPATH = $(shell dirname `which gcc`)

export SDL_CONFIG = ${BUILD_TOP}/bin/sdl-config
export PATH:=$(PATH):${SRC_DIR}/tolua++-1.0.92/bin

#ENABLE_PROFILING=--enable-profiling --disable-shared
USE_MMX=--disable-mmx

# Override to yes to build closed source squeezeplay libraries 
SPPRIVATE=no

LIBMAD = $(shell pkg-config --exists mad || echo libmad )
LIBFLAC = $(shell pkg-config --exists flac || echo flac )
LIBFREETYPE= $(shell pkg-config --exists freetype2 || echo freetype )
FREETYPE= $(shell freetype-config --prefix || echo ${PREFIX} )
LIBTREMOR = tremor

export PKG_CONFIG_PATH=${PREFIX}/../build/linux/lib/pkgconfig:/usr/lib/pkgconfig:/usr/lib/$(ABI)/pkgconfig

ifeq ($(SPPRIVATE),yes)
	ENABLE_SPPRIVATE=--with-spprivate
	SPPRIVATE_TARGETS=axtls squeezeplay_private
endif


#
# Top level targets
#
.PHONY: all
all: sdl-all lua-all app squeezeplay-tgz

generated/.m:
	mkdir -p generated
	cd generated && touch .m


#####
# SDL
#####

.PHONY: freetype tslib sdl sdl-image sdl-tff sdl-gfx c-ares sdl-all
sdl-all: ${LIBFREETYPE} tslib sdl sdl-ttf sdl-image sdl-gfx

# freetype
freetype-2.1.10/config.mk:
	cd freetype-2.1.10; ./configure --enable-shared ${ENABLE_PROFILING} --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

freetype: freetype-2.1.10/config.mk
	cd freetype-2.1.10; make; make install

generated/tslib/autogen.sh: generated/.m
	cd generated/ && ( cd tslib || git clone --depth 1 https://github.com/kergoth/tslib.git -b release/1.1 tslib )

generated/tslib/configure: generated/tslib/autogen.sh
	cd generated/tslib/ && ./autogen.sh

generated/tslib/Makefile: generated/tslib/configure
	cd generated/tslib/ && ./configure --host=${HOST} --target=${TARGET} --prefix=${PREFIX} 

tslib: generated/tslib/Makefile
	cd generated/tslib/ && make && make install

# sdl --disable-video-directfb --enable-alsa --enable-audio --disable-assembly --disable-video-x11 
SDL-1.2.15/Makefile:
	cd SDL-1.2.15 && ./configure --enable-video --enable-events --disable-joystick --disable-cdrom --enable-threads --enable-timers --enable-file --enable-loadso --disable-oss --disable-esd --disable-arts --enable-clock_gettime --host=${HOST} --target=${TARGET} --prefix=${PREFIX} --disable-shared --enable-screensaver --disable-video-directfb --disable-video-opengl --disable-pulseaudio --disable-alsa --disable-audio --disable-video-dga --enable-video-fbcon-dispmanx

sdl: SDL-1.2.15/Makefile
	cd SDL-1.2.15; make && make install

# sdl_image (requires jpeg tiff png)
SDL_image-1.2.5/Makefile:
	cd SDL_image-1.2.5; SDL_CONFIG=${PREFIX}/bin/sdl-config ./configure --disable-tif  --host=${HOST} --target=${TARGET} ${ENABLE_PROFILING} --prefix=${PREFIX} ${LIBPNG} ${LIBJPEG}

sdl-image: SDL_image-1.2.5/Makefile
	cd SDL_image-1.2.5; make && make install

# sdl_ttf
SDL_ttf-2.0.8/Makefile:
	cd SDL_ttf-2.0.8; SDL_CONFIG=${PREFIX}/bin/sdl-config ./configure  ${ENABLE_PROFILING} --host=${HOST} --target=${TARGET} --prefix=${PREFIX} --with-freetype-prefix=${FREETYPE} --without-opengl

sdl-ttf: SDL_ttf-2.0.8/Makefile
	cd SDL_ttf-2.0.8; make && make install

# sdl_gfx
SDL_gfx-2.0.15/Makefile:
	cd SDL_gfx-2.0.15; ./configure ${ENABLE_PROFILING} ${USE_MMX} --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

sdl-gfx: SDL_gfx-2.0.15/Makefile
	cd SDL_gfx-2.0.15; make && make install


#####
# lua
#####

.PHONY: lua-all lua luasocket slnunicode luajson loop luaexpat luafilesystem luaprofiler luazipfilter luamd5 luabitop generated/luafilesystem

lua-all: lua tolua++ luasocket slnunicode luajson loop luaexpat luafilesystem luaprofiler luazipfilter luamd5 luabitop

# lua (requires readline ncurses)
lua:
	cd lua-5.1.1; make linux INSTALL_TOP=${PREFIX} && make install INSTALL_TOP=${PREFIX}

# luasocket (requires lua)
luasocket: lua
	cd luasocket-2.0.2; make install LD="gcc -shared" INSTALL_TOP=${PREFIX} TARGET=$(TARGET) PLATFORM=linux

slnunicode: lua
	cd slnunicode-1.1; make install INSTALL_TOP=${PREFIX} TARGET=$(TARGET) PLATFORM=linux

luajson/Makefile:
	cd luajson; ./configure --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

luajson: luajson/Makefile
	cd luajson; make && cp .libs/json.so ${PREFIX}/lib/lua/5.1/json.so

luazipfilter/Makefile:
	cd luazipfilter; ./configure --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

luazipfilter: luazipfilter/Makefile
	cd luazipfilter; make && cp .libs/zipfilter.so ${PREFIX}/lib/lua/5.1/zipfilter.so

luamd5:
	cd luamd5; make LUA=${PREFIX} MYNAME=sha1
	cd luamd5; make LUA=${PREFIX} MYNAME=md5
	cp luamd5/md5.so ${PREFIX}/lib/lua/5.1/md5.so
	cp luamd5/sha1.so ${PREFIX}/lib/lua/5.1/sha1.so

loop:
	-mkdir ${PREFIX}/share/lua/5.1/loop
	-mkdir ${PREFIX}/share/lua/5.1/loop/collection
	-mkdir ${PREFIX}/share/lua/5.1/loop/debug
	cd loop-2.2-alpha; install loop/base.lua ${PREFIX}/share/lua/5.1/loop/.
	cd loop-2.2-alpha; install loop/simple.lua ${PREFIX}/share/lua/5.1/loop/.
	cd loop-2.2-alpha; install loop/table.lua ${PREFIX}/share/lua/5.1/loop/.
	cd loop-2.2-alpha; install loop/collection/ObjectCache.lua ${PREFIX}/share/lua/5.1/loop/collection/.
	cd loop-2.2-alpha; install loop/debug/Viewer.lua ${PREFIX}/share/lua/5.1/loop/debug/.

lualogging:
	cd lualogging-1.1.2; make install LUA_DIR=${PREFIX}/share/lua/5.1

lsyslog: lsyslog-4/Makefile
	cd lsyslog-4; make LUA_SRC=${PREFIX} syslog.so
	install lsyslog-4/syslog.so ${PREFIX}/lib/lua/5.1

luaexpat:
	cd luaexpat-1.0.2; make PREFIX=${PREFIX} PLATFORM=linux && make install PREFIX=${PREFIX} PLATFORM=linux

#luafilesystem:
#	cd luafilesystem-1.2 && make install PREFIX=${PREFIX} PLATFORM=linux

luaprofiler: generated/luafilesystem
	cd luaprofiler-2.0 && make -f Makefile.linux install

generated/luafilesystem/Makefile: generated/.m
	cd generated/ && ( cd luafilesystem || git clone https://github.com/pssc/luafilesystem.git -b master luafilesystem )

luafilesystem: generated/luafilesystem/Makefile
	cd generated/luafilesystem && make install PREFIX=${PREFIX} PLATFORM=linux


LUABITOP_DIR=LuaBitOp-1.0.2
generated/${LUABITOP_DIR}.tar.gz.downloaded: generated/.m
	cd generated && wget http://bitop.luajit.org/download/${LUABITOP_DIR}.tar.gz
	[ -s generated/${LUABITOP_DIR}.tar.gz ] && touch generated/${LUABITOP_DIR}.tar.gz.downloaded

generated/${LUABITOP_DIR}/Makefile: generated/${LUABITOP_DIR}.tar.gz.downloaded
	cd generated && tar xvf ./${LUABITOP_DIR}.tar.gz

luabitop: generated/${LUABITOP_DIR}/Makefile
	cd generated/${LUABITOP_DIR}/ && ${MAKE} && install bit.so ${PREFIX}/lib/lua/5.1

# just compile the library for to tolua++
.PHONY: tolua++
tolua++: lua
	cd tolua++-1.0.92/src/lib; ${CC} -shared -fPIC -o libtolua++.so -I../../include -I${PREFIX}/include *.c
	mkdir -p ${PREFIX}/lib
	install tolua++-1.0.92/include/tolua++.h ${PREFIX}/include
	install tolua++-1.0.92/src/lib/libtolua++.so ${PREFIX}/lib

#
# squeezeplay
#
.PHONY: app flac libmad tremor squeezeplay squeezeplay_desktop squeezeplay_contrib squeezeplay_private freefont axtls rtmp jivelite squeezeplay_wicd_frontend 800x480Skin
app: ${LIBFLAC} ${LIBMAD} ${LIBTREMOR} ${SPPRIVATE_TARGETS} squeezeplay squeezeplay_desktop squeezeplay_contrib freefont rtmp


generated/jivelite/Makefile: generated/.m
	cd generated/ && ( cd jivelite || git clone https://github.com/pssc/jivelite.git -b master jivelite )

jivelite:  generated/jivelite/Makefile
	cp -au generated/jivelite/share/jive/applets/HDSkin ${PREFIX}/share/jive/applets/
	cp -au generated/jivelite/share/jive/applets/HDGridSkin ${PREFIX}/share/jive/applets/
	cp -au generated/jivelite/share/jive/applets/WQVGAgridSkin ${PREFIX}/share/jive/applets/

generated/squeezeplay_wicd_frontend/README: generated/.m
	cd generated/ && ( cd squeezeplay_wicd_frontend || git clone https://github.com/pssc/squeezeplay-wicd-frontend.git -b master squeezeplay_wicd_frontend )

generated/800x480Skin/800x480SkinMeta.lua: generated/.m
	cd generated/ && ( cd 800x480Skin || git clone https://github.com/pssc/Squeezeplay-800x480Skin.git -b master 800x480Skin )

generated/AMixer/README: generated/.m
	cd generated/ && ( cd AMixer || git clone https://github.com/pssc/AMixer.git -b master AMixer )

800x480Skin: generated/800x480Skin/800x480SkinMeta.lua
	cp -au generated/800x480Skin ${PREFIX}/share/jive/applets/
	rm -rf  ${PREFIX}/share/jive/applets/800x480Skin/.git

# portaudio
portaudio_v19_20111121/Makefile:
	cd portaudio_v19_20111121; ./configure --without-jack --without-oss --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

portaudio_v19_1360/Makefile:
	cd portaudio_v19_1360; ./configure --without-jack --without-oss --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

portaudio: portaudio_v19_20111121/Makefile
	cd portaudio_v19_20111121; make && make install

# flac
flac-1.2.1/Makefile:
	cd flac-1.2.1; ./configure --disable-ogg --disable-xmms-plugin --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

flac: flac-1.2.1/Makefile
	cd flac-1.2.1; make && make install

#libmad
LIBMAD_DIR=libmad-0.15.1b
generated/${LIBMAD_DIR}.tar.gz.downloaded: generated/.m
	cd generated && wget ftp://ftp.mars.org/pub/mpeg/${LIBMAD_DIR}.tar.gz
	[ -s generated/${LIBMAD_DIR}.tar.gz ] && touch generated/${LIBMAD_DIR}.tar.gz.downloaded

generated/${LIBMAD_DIR}/Makefile.am: generated/${LIBMAD_DIR}.tar.gz.downloaded
	cd generated && tar xvf ./${LIBMAD_DIR}.tar.gz
		
generated/${LIBMAD_DIR}/Makefile: generated/${LIBMAD_DIR}/Makefile.am
	cd generated/${LIBMAD_DIR} && cp configure configure.copy && sed -s 's/-fforce-mem//' configure.copy > configure
	cd generated/${LIBMAD_DIR} && ./configure --host=${HOST} --target=${TARGET} --prefix=${PREFIX} --enable-fpm=`echo ${ARCH}| sed -s 's/armv.*/arm/'| sed -s 's/i686/intel/'| sed -s 's/x86_64/64bit/'`
	# -fforce-mem removed fron configure script gcc 4.7 unkown arg.

libmad: generated/${LIBMAD_DIR}/Makefile
	cd generated/${LIBMAD_DIR}; make && make install


# ogg
Tremor/Makefile:
	cd Tremor; CFLAGS="-DSQUEEZEPLAY" ./configure --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

tremor: Tremor/Makefile
	cd Tremor; make && make install


# axTLS
AXTLS_DIR = generated/axTLS
AXTLS_TAR = axTLS-1.2.0.tar.gz
${AXTLS_DIR}/Makefile: generated
	cd generated; tar xvf ../${AXTLS_TAR}
	cp axTLS.config ${AXTLS_DIR}/config/.config
	echo "PREFIX=\"${PREFIX}\"" >> ${AXTLS_DIR}/config/.config

axtls: ${AXTLS_DIR}/Makefile
	cd ${AXTLS_DIR}; make oldconfig && make && make install

rtmp: squeezeplay
	cd luartmp-squeezeplay; make
	cp luartmp-squeezeplay/rtmp.so ${PREFIX}/lib/lua/5.1/rtmp.so 


# squeezeplay
squeezeplay/Makefile:
	cd squeezeplay; SDL_CONFIG=${SDL_CONFIG} LDFLAGS="${LDFLAGS}" ./configure ${ENABLE_SPPRIVATE} ${ENABLE_PROFILING} --host=${HOST} --target=${TARGET} --prefix=${PREFIX} --enable-tests

squeezeplay: squeezeplay/Makefile
	cd squeezeplay; make && make install

squeezeplay_jive/Makefile:
	cd squeezeplay_jive; SDL_CONFIG=${PREFIX}/bin/sdl-config ./configure --host=${TARGET} --target=${TARGET} --prefix=${PREFIX}

squeezeplay_jive: squeezeplay_jive/Makefile
	cd squeezeplay_jive; make && make DESTDIR=${BUILDDIR} install
	rm ${PREFIX}/lib/jiveBSP.*
	cp squeezeplay_jive/.libs/jiveBSP.so ${PREFIX}/lib/lua/5.1/jiveBSP.so
	rm ${PREFIX}/lib/jiveWireless.*
	cp squeezeplay_jive/.libs/jiveWireless.so ${PREFIX}/lib/lua/5.1/jiveWireless.so
	rm ${PREFIX}/lib/jiveWatchdog.*
	cp squeezeplay_jive/.libs/jiveWatchdog.so ${PREFIX}/lib/lua/5.1/jiveWatchdog.so

squeezeplay_desktop/Makefile:
	cd squeezeplay_desktop; SDL_CONFIG=${SDL_CONFIG} ./configure --host=${HOST} --target=${TARGET} --prefix=${PREFIX}

squeezeplay_desktop: squeezeplay_desktop/Makefile 800x480Skin jivelite squeezeplay_wicd_frontend
	cd squeezeplay_desktop; make install
	cp squeezeplay_desktop/squeezeplay.sh ${PREFIX}/bin/
	cp squeezeplay_desktop/squeezeplay-touch.sh ${PREFIX}/bin/
	chmod +x ${PREFIX}/bin/squeezeplay.sh
	chmod +x ${PREFIX}/bin/squeezeplay-touch.sh
	touch squeezeplay_desktop/etc/ts.conf
	cp -au squeezeplay_desktop/etc ${PREFIX}/
	cp -au squeezeplay_desktop/lib ${PREFIX}/
	# fixme archtest
	cp -au ../assets/SqueezePI/*.png ${PREFIX}/share/jive/jive/
	mkdir -p ${PREFIX}/share/doc/
	cp -ua squeezeplay/LICENSE ${PREFIX}/share/doc/
	cp -ua squeezeplay_fab4/share/applets/AutoSkin ${PREFIX}/share/jive/applets/

squeezeplay_contrib: squeezeplay/Makefile
	cd squeezeplay_contrib; make PREFIX=${PREFIX}

squeezeplay_private/Makefile:
	cd squeezeplay_private; SDL_CONFIG=${SDL_CONFIG} ./configure --host=${HOST} --target=${TARGET} --prefix=${PREFIX} --enable-wma --enable-aac

squeezeplay_private: squeezeplay_private/Makefile
	cd squeezeplay_private; make PREFIX=${PREFIX} install

squeezeplay_wicd_frontend: generated/squeezeplay_wicd_frontend/README
	cd generated/squeezeplay_wicd_frontend/wicdbridge && ${MAKE} PREFIX=${PREFIX}
#CFLAGS="-I${PREFIX}/include/lua5.1 ${CFLAGS}"
	cp -au generated/squeezeplay_wicd_frontend/SetupNetworking ${PREFIX}/share/jive/applets/

amixer: generated/AMixer/README
	mkdir -p ${PREFIX}/share/jive/applets/AMixer
	install generated/AMixer/LICENSE ${PREFIX}/share/jive/applets/AMixer/.
	install generated/AMixer/*.lua ${PREFIX}/share/jive/applets/AMixer/.

# freefont
freefont:
	rm -rf ${PREFIX}/share/jive/fonts
	mkdir -p ${PREFIX}/share/jive/fonts
	cp -u freefont-20090104/FreeSans.ttf ${PREFIX}/share/jive/fonts
	cp -u freefont-20090104/FreeSansBold.ttf ${PREFIX}/share/jive/fonts

# 
# This builds the .tarball. It's called by 'all' so no need to run it manually
# 
squeezeplay-tgz: squeezeplay/Makefile
	-rm ../build/linux/lib/libmad.*
	cd squeezeplay; ${MAKE} squeezeplay-tgz

#
# Allow user to call the -deb build and it runs both the 'all' and then packages it
#

.PHONY: squeezeplay-deb squeezeplay-deb-dep
squeezeplay-deb: squeezeplay-deb-dep all squeezeplay-deb-make

squeezeplay-deb-make: squeezeplay/Makefile
	cd squeezeplay; ${MAKE} squeezeplay-deb

# FIXME document all build deps in here
squeezeplay-deb-dep:
	# FIXME use ../platforms/debian/control builddeb...
	dpkg-query --status libmad0-dev >/dev/null 2>&1 || sudo apt-get install libmad0-dev
	dpkg-query --status libflac-dev >/dev/null 2>&1 || sudo apt-get install libflac-dev
	dpkg-query --status libfreetype6-dev >/dev/null 2>&1 || sudo apt-get install libfreetype6-dev
	dpkg-query --status libi2c-dev >/dev/null 2>&1 || sudo apt-get install libi2c-dev

.PHONY: clean_generated
clean_generated:
	@echo "----------------------------------------------------------"
	@echo "Cleaning: generated dir"
	-rm -rf generated

#
# clean
#

.PHONY: clean clean-generated
clean:
	-cd freetype-2.1.10; make distclean
	-cd SDL-1.2.15; make distclean; rm -f include/SDL_config.h;
	-cd SDL_image-1.2.5; make distclean
	-cd SDL_ttf-2.0.8; make distclean
	-cd SDL_gfx-2.0.15; make distclean
	-cd lua-5.1.1; make clean
	-cd luasocket-2.0.2; make clean PLATFORM=linux
	-cd slnunicode-1.1; make clean PLATFORM=linux
	-cd luaexpat-1.0.2; make clean PLATFORM=linux
	-cd luafilesystem-1.2; make clean PLATFORM=linux
	-cd luajson; make distclean
	-cd luazipfilter; make distclean
	-cd luaprofiler-2.0; make -f Makefile.linux clean
	-cd luamd5; make MYNAME=sha1 clean
	-cd luamd5; make MYNAME=md5 clean
	-cd tolua++-1.0.92/src/lib; rm libtolua++.so; rm *.o
	#cd portaudio_v19_20111121; make distclean
	-cd flac-1.2.1; make distclean
	-cd libmad-0.15.1b; make distclean
	-cd Tremor; make distclean
	-cd squeezeplay; make distclean
	-cd squeezeplay_private; make distclean
	-cd squeezeplay_desktop; make distclean
